{{! Copyright (c) Mark Voortman - mark@voortman.name. All rights reserved. Licensed under the MIT license. See LICENSE.txt in the project root for license information.}}
<h2 id="header">Builder</h2>
<div id="menu"></div>
<hr id="hr1">
<div id="content"></div>
<hr id="hr2">

<script>
 function save(template, alldata, cb) {
   $.ajax({
     type: "POST",
     url: "/save_data",
     data: {
       data: JSON.stringify(alldata)
     }
   }).done(function(data) {
     if (data.error) {
       console.log(JSON.stringify(data.error));
       alert(JSON.stringify(data.error));
     }
     else {
       if (cb) {
         cb();
       }
       else {
         show(template, alldata);
       }
     }
   }).fail(fail);
 }
 
 function show(template, alldata) {
   $("#content").empty();
   $("#content").append("<h4>Instructions: Please upload one artifact per objective.</h4>");
   for (var i = 0; i < template.objectives.length; i++) {
     (function(i) {
       $("#content").append("<br>");
       $("#content").append("<b>" + (i+1) + ". " + template.objectives[i].text + "</b>");
       $("#content").append("<br>");
       var status = $("<div>");
       $("#content").append(status);
       if (alldata.objectives[template.objectives[i].id]) {
         status.append(alldata.objectives[template.objectives[i].id].name);
       }
       status.append();
       var progress = $("<progress>");
       $("#content").append(progress);
       progress.hide();
       var form = $("<form>");
       $("#content").append(form);
       form.attr("enctype", "multipart/form-data");
       var input = $("<input>");
       form.append(input);
       input.addClass("form-control");
       input.attr("type", "file");
       input.attr("name", "file");
       input.change(function() {
         if (input.val()) {
           $.ajax({
             url: "/fileupload",
             type: "POST",
             data: new FormData(form[0]),
             cache: false,
             contentType: false,
             processData: false,
             xhr: function() {
               var myXhr = $.ajaxSettings.xhr();
               if (myXhr.upload) {
                 progress.show();
                 myXhr.upload.addEventListener("progress", function(e) {
                   if (e.lengthComputable) {
                     progress.attr({
                       value: e.loaded,
                       max: e.total,
                     });
                   }
                 }, false);
               }
               return myXhr;
             }
           }).done(function(data) {
             if (data.error) {
               console.log(JSON.stringify(data.error));
               alert(JSON.stringify(data.error));
             }
             else {
               progress.hide();
               alldata.objectives[template.objectives[i].id] = {
                 id: data.id,
                 name: data.name
               };
               save(template, alldata, function() {
                 status.empty();
                 status.append(data.name);
               });
               input.val("");
             }
           }).fail(fail);
         }
       });
       $("#content").append("<br>");
     })(i);
   }
 }
 
 window.onload = function() {
   $.ajax({
     type: "GET",
     url: "/load_template"
   }).done(function(template) {
     if (template.error) {
       alert(template.error);
     }
     else {
       $.ajax({
         type: "GET",
         url: "/load_data"
       }).done(function(alldata) {
         if (alldata.error) {
           alert(alldata.error);
         }
         else {
           if (!alldata.objectives) {
             alldata.objectives = {};
           }
           show(template, alldata);
         }
       });
     }
   }).fail(fail);
 }
</script>
